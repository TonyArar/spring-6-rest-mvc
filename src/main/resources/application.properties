# Main configuration/properties file

spring.application.name=spring-6-rest-mvc
logging.level.com.spring.spring_6_rest_mvc=debug

# Log SQL queries
spring.jpa.properties.hibernate.show_sql = true
# Format logged SQL queries
spring.jpa.properties.hibernate.format_sql = true


# available profiles (please keep this list up-to-date): localpostgresql, localh2db

# Set active profiles.
# This also determines which configuration/properties files to also consider,
# these files must follow the naming convention: application-profilename.properties.
spring.profiles.active = localpostgresql



# commented out


# the following are properties that enhance performance and reduce load on server
# for example if a lot of microservices use the same server then we might want to
# limit Hikari connections pool size or if the server is very busy we might want
# to disable/enable some features on the server, for more info read the docs of every property
# spring.datasource.hikari.pool-name = DB-Pool
# spring.datasource.hikari.maximum-pool-size = 5
# spring.datasource.hikari.data-source-properties.cachePrepStmts = true
# spring.datasource.hikari.data-source-properties.prepStmtCacheSize = 250
# spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit = 2048
# spring.datasource.hikari.data-source-properties.useServerPrepStmts = true
# spring.datasource.hikari.data-source-properties.useLocalSessionState = true
# spring.datasource.hikari.data-source-properties.rewriteBatchedStatements = true
# spring.datasource.hikari.data-source-properties.cacheResultSetMetadata = true
# spring.datasource.hikari.data-source-properties.cacheServerConfiguration = true
# spring.datasource.hikari.data-source-properties.elideSetAutoCommits = true
# spring.datasource.hikari.data-source-properties.maintainTimeStats = false